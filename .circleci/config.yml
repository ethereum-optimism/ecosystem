version: 2.1

orbs:
  node: circleci/node@6.3.0
  utils: ethereum-optimism/circleci-utils@1.0.10

commands:
  prepare-snapshot:
    description: "Prepare the snapshot name"
    steps:
      - run:
          name: Setup snapshot name
          command: |
            SNAPSHOT_NAME=${CIRCLE_BRANCH}
            echo "Will create snapshot using name $SNAPSHOT_NAME"
            echo "export SNAPSHOT_NAME=${SNAPSHOT_NAME}" >> "$BASH_ENV"
      - run:
          name: Prepare changeset version environment
          command: |
            echo "export GITHUB_TOKEN=${GITHUB_TOKEN_GOVERNANCE}" >> "$BASH_ENV"
      - run:
          name: Create snapshot versions
          command: pnpm release:version:snapshot

  setup:
    description: "Setup Node.js environment with pnpm and nx"
    steps:
      # Read Node.js version from .nvmrc
      - run:
          name: Read Node.js version
          command: |
            NODE_VERSION=$(cat .nvmrc)
            echo "export NODE_VERSION=$NODE_VERSION" >> $BASH_ENV

      # Setup Node.js with the version from .nvmrc
      - node/install:
          node-version: ${NODE_VERSION}

      # Install pnpm
      - run:
          name: Install pnpm
          command: |
            npm install -g pnpm@latest

      # Set nx base and head refs (equivalent to nx-set-shas)
      - run:
          name: Set nx base and head refs
          command: |
            if [ -n "${CIRCLE_PULL_REQUEST}" ]; then
              # For pull requests
              export NX_BASE="origin/${CIRCLE_TARGET_BRANCH}"
              export NX_HEAD="HEAD"
            else
              # For main branch
              export NX_BASE="HEAD~1"
              export NX_HEAD="HEAD"
            fi
            echo "export NX_BASE=$NX_BASE" >> $BASH_ENV
            echo "export NX_HEAD=$NX_HEAD" >> $BASH_ENV

      # Log nx base and head refs
      - run:
          name: Log nx base and head refs
          command: |
            echo "BASE: $NX_BASE"
            echo "HEAD: $NX_HEAD"

      # Install dependencies
      - run:
          name: Install dependencies
          command: pnpm i --frozen-lockfile

      # Build affected projects
      - run:
          name: Build affected projects
          command: pnpm nx affected --base=$NX_BASE --head=$NX_HEAD --target=build

jobs:
  publish-to-npm:
    docker:
      - image: cimg/node:20.11
    parameters:
      prepare-snapshot:
        type: boolean
        default: false
    steps:
      - checkout
      - run:
          name: Setup
          command: |
            pnpm install
          environment:
            NPM_TOKEN: nada

      - run:
          name: Check NPM Token
          command: |
            if [ -z "${NPM_TOKEN}" ]; then
              echo "NPM_TOKEN is not set. Please set it in CircleCI project settings."
              exit 1
            fi

      - run:
          name: Configure NPM Token and Registry
          command: |
            npm config set '//registry.npmjs.org/:_authToken' "${NPM_TOKEN}"

      - run:
          name: Verify NPM Token
          command: npm whoami

      - run:
          name: Build
          command: pnpm build
          environment:
            NPM_TOKEN: nada

      - when:
          condition:
            equal: [<< parameters.prepare-snapshot >>, true]
          steps:
            - prepare-snapshot

      - utils/changesets:
          createGithubReleases: false
          publish: "pnpm release:publish"
          version: "pnpm release:version"

workflows:
  release:
    jobs:
      - publish-to-npm:
          name: Publish new versions
          context:
            - circleci-repo-ecosystem # for GITHUB_TOKEN_GOVERNANCE && NPM_TOKEN
          filters:
            branches:
              only: main

      - publish-to-npm:
          name: Publish snapshot versions
          prepare-snapshot: true
          context:
            - circleci-repo-ecosystem # for GITHUB_TOKEN_GOVERNANCE && NPM_TOKEN
          filters:
            branches:
              only: main
