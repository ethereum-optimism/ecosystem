version: 2.1

orbs:
  node: circleci/node@6.3.0
  utils: ethereum-optimism/circleci-utils@1.0.10

commands:
  prepare-snapshot:
    description: "Prepare the snapshot name"
    steps:
      - run:
          name: Setup snapshot name
          command: |
            SNAPSHOT_NAME=${CIRCLE_BRANCH}
            echo "Will create snapshot using name $SNAPSHOT_NAME"
            echo "export SNAPSHOT_NAME=${SNAPSHOT_NAME}" >> "$BASH_ENV"
      - run:
          name: Prepare changeset version environment
          command: |
            echo "export GITHUB_TOKEN=${GITHUB_TOKEN_GOVERNANCE}" >> "$BASH_ENV"
      - run:
          name: Create snapshot versions
          command: pnpm release:version:snapshot

  setup:
    description: "Setup Node.js environment with pnpm and nx"
    steps:
      - run:
          name: Install mise
          command: |
            if command -v mise &> /dev/null; then
              echo "mise already installed at $(command -v mise)"
            else
              curl https://mise.run | sh
            fi
            echo "export PATH=\"$HOME/.local/bin:\$PATH\"" >> "$BASH_ENV"
            echo "export MISE_DATA_DIR=\"$HOME/.mise\"" >> "$BASH_ENV"
            echo "export MISE_JOBS=$(nproc)" >> "$BASH_ENV"
            echo "eval \"\$($HOME/.local/bin/mise activate --shims)\"" >> "$BASH_ENV"
      - run:
          name: Install mise dependencies
          command: |
            mise install -v -y
      - run:
          name: Set nx base and head refs
          command: |
            # Fetch all branches
            git fetch origin

            if [ -n "${CIRCLE_PULL_REQUEST}" ]; then
              # For pull requests
              export NX_BASE="origin/${CIRCLE_TARGET_BRANCH:-main}"
              export NX_HEAD="HEAD"
            else
              # For direct pushes to branches, compare against the previous commit
              git rev-parse --verify origin/main && DEFAULT_BASE="origin/main" || DEFAULT_BASE="HEAD~1"
              export NX_BASE="${DEFAULT_BASE}"
              export NX_HEAD="HEAD"
            fi

            echo "export NX_BASE=$NX_BASE" >> $BASH_ENV
            echo "export NX_HEAD=$NX_HEAD" >> $BASH_ENV

      # Log nx base and head refs
      - run:
          name: Log nx base and head refs
          command: |
            echo "BASE: $NX_BASE"
            echo "HEAD: $NX_HEAD"

      # Install dependencies
      - run:
          name: Install dependencies
          environment:
            NPM_TOKEN: nada
          command: |
            pnpm i --frozen-lockfile

jobs:
  publish-to-npm:
    docker:
      - image: cimg/node:20.11
    parameters:
      prepare-snapshot:
        type: boolean
        default: false
    steps:
      - checkout
      - setup
      - run:
          name: Build projects
          environment:
            NPM_TOKEN: nada
          command: pnpm nx run-many --target=build
      - run:
          name: Check NPM Token
          command: |
            if [ -z "${NPM_TOKEN}" ]; then
              echo "NPM_TOKEN is not set. Please set it in CircleCI project settings."
              exit 1
            fi
      - run:
          name: Configure NPM Token and Registry
          command: |
            npm config set '//registry.npmjs.org/:_authToken' "${NPM_TOKEN}"

      - run:
          name: Verify NPM Token
          command: npm whoami

      - run:
          name: Build
          command: pnpm build
          environment:
            NPM_TOKEN: nada

      - when:
          condition:
            equal: [<< parameters.prepare-snapshot >>, true]
          steps:
            - prepare-snapshot

      - utils/changesets:
          createGithubReleases: false
          publish: "pnpm release:publish"
          version: "pnpm release:version"

  check:
    docker:
      - image: cimg/node:20.11
    steps:
      - checkout
      - setup
      - run:
          name: Run Build
          command: pnpm nx affected --base=$NX_BASE --head=$NX_HEAD --target=build
      - run:
          name: Run TypeChecker
          command: pnpm nx affected --base=$NX_BASE --head=$NX_HEAD --target=typecheck
      - run:
          name: Run Linters
          command: pnpm nx affected --base=$NX_BASE --head=$NX_HEAD --target=lint
      - run:
          name: Run Tests
          command: pnpm nx affected --base=$NX_BASE --head=$NX_HEAD --target=test

workflows:
  release:
    jobs:
      - publish-to-npm:
          name: Publish new versions
          context:
            - circleci-repo-ecosystem # for GITHUB_TOKEN_GOVERNANCE && NPM_TOKEN
          filters:
            branches:
              only: main

      - publish-to-npm:
          name: Publish snapshot versions
          prepare-snapshot: true
          context:
            - circleci-repo-ecosystem # for GITHUB_TOKEN_GOVERNANCE && NPM_TOKEN
          filters:
            branches:
              only: main
  check-workflow:
    jobs:
      - check
